1. #include
   引用文件，支持include path，可通过include-paths.php配置，也可
   通过指令#pragma add_include_path 添加路径，通过指令添加的路径
   仅可被之后的引用操作所使用。
2. #define
   定义，可用于词替换。暂不支持函数式定义及#或##操作。
3. #ifdef / #ifndef / #else / #endif
   判断是否已定义
4. #warning
   输出警告信息。警告信息列表在输出文件头部。可通过
   #pragma ignore_warning 开关警告输出。
5. #error
   终止处理过程，输出错误信息。可通过 #pragma keep_processed 开关当
   出现错误时是否留存已处理内容。
6. #pragma
   处理指令，指令内容可被define替换处理
7. #region / #endregion
   进入区域，退出区域。可以使文件更为条理。另有以下几个特殊区域：
       _REM_
       注释区域，该区域内文本不被处理
       _PROTECTED_
       保护区域，该区域内容将被移动到文件头部，同时不参与pragma的
       exec / exec_as_output 处理
       _MACRO_
       该区域内文本仅做宏指令处理，普通文本将不输出
8. #if / #elif
   进行一些逻辑判断，支持define()函数判断是否已定义，支持&& || !等
   逻辑操作

#pragma 指令

add_include_path            添加引用路径
keep_processed (on|off)     当出现错误时，保持已处理的文本
ignore_exec_error (on|off)  忽略执行文件错误
ignore_warning (on|off)     不输出警告信息
set_time_limit              设置脚本最长执行时间，防止运行外部指
                            令时出现脚本超时
exec                        执行命令。可用%s代替输入文件，文件内
                            容及当前已处理内容
exec_as_output              执行命令，并将执行结果作为输出内容。可
                            用%s代替输入文件，如不使用，则通过
                            stdin输入；%d代替输出文件，如不使用，
                            则通过stdout取出结果
exec_to_output              执行命令，并将执行结果添加到输出内容。
dump                        将已处理的部分内容导出至文件。注意文件
                            相对于入口文件，且不论指令位置，一律
                            处理完后进行导出，且以最后一次指定文件为准
charset                     指定编码字符集，等同输出Content-type头
header                      输出特定的http头，等同php中header函数